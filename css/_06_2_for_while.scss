@use "_util";

//------------------------------------------------------------------------------
// 흐름처리: @for, @while
//------------------------------------------------------------------------------

.for {
    $result: 0;
    $end: 10;
    // for에 시작과 끝 사이 값에는 아래 둘 중 하나를 지정할 수 있음:
    // through: 반복문에서 끝 숫자를 포함함
    // to: 반복문에서 끝 숫자를 포함하지 않음
    @for $i from 1 through $end {
        $result: $result + $i;
    }
    @include util.echo("Adding every number from #{1} to #{$end} is #{$result}");
}

// *************** 주의 ***************
// 다른 프로그래밍 언어와 마찬가지로 @while문 조건이 잘못되면 SASS 컴파일러를 무한루프에 빠뜨릴 수 있음
// (무한루프때문에 디버깅이 필요한 경우 @debug를 사용해서 컴파일 과정에서 변수 출력 가능)
// *************** 주의 ***************

.while {
    $result-message: "";
    // 소수 구하기
    $max-count: 100; // 소수를 구할 최대 갯수
    $curr-count: 1;
    $curr-num: 0;
    @while $curr-count < $max-count {
        $is-sosu: true;
        @for $i from 2 to $curr-num {
            @if ($curr-num % $i) == 0 {
                $is-sosu: false;
                // 참고로 SCSS에선 break나 continue같은 문은 지원하지 않음
            }
        }
        @if $is-sosu {
            $result-message: $result-message + "#{$curr-num}, ";
            $curr-count: $curr-count + 1;
        }
        $curr-num: $curr-num + 1;
    }
    @include util.echo("소수 목록: #{$result-message}");
}

